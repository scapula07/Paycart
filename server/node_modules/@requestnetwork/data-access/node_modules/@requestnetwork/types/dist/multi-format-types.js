"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FORMAT_IDENTITY_ETHEREUM_ADDRESS_LENGTH = exports.FORMAT_NORMALIZE_KECCAK256_HASH_LENGTH = exports.prefix = exports.PlainTypes = exports.HashTypes = void 0;
const HashTypes = require("./multi-format/hash-types");
exports.HashTypes = HashTypes;
const PlainTypes = require("./multi-format/plain-types");
exports.PlainTypes = PlainTypes;
/** Prefix of handled data format */
var prefix;
(function (prefix) {
    prefix["PLAIN_TEXT"] = "00";
    /** the data is Keccak256 hash of normalized data (sorted object, stringify and lowercase) */
    prefix["NORMALIZE_KECCAK256_HASH"] = "01";
    /** ECIES encrypted data */
    prefix["ECIES_ENCRYPTED"] = "02";
    /** AES256-CBC encrypted data */
    prefix["AES256_CBC_ENCRYPTED"] = "03";
    /** AES256-GCM encrypted data */
    prefix["AES256_GCM_ENCRYPTED"] = "04";
    /** Identity Ethereum address */
    prefix["IDENTITY_ETHEREUM_ADDRESS"] = "20";
})(prefix = exports.prefix || (exports.prefix = {}));
/** Length of a formatted normalized Keccak256 hash (prefix + hash = 2 + 64 = 66) (no 0x expected) */
exports.FORMAT_NORMALIZE_KECCAK256_HASH_LENGTH = 66;
/** Length of a formatted ethereum address identity (prefix + address = 2 + 40 = 42) (no 0x expected) */
exports.FORMAT_IDENTITY_ETHEREUM_ADDRESS_LENGTH = 42;
//# sourceMappingURL=multi-format-types.js.map