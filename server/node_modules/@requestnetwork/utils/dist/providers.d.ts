import { providers } from 'ethers';
declare type ProviderFactory = (network: string | undefined) => providers.Provider | string;
/**
 * @param network the network to connect to
 * @param defaultFactory the defaultFactory to use as fallback if needed
 */
declare type CurrentProviderFactory = (network: string | undefined, defaultFactory: ProviderFactory) => providers.Provider | string;
declare const _default: {
    setProviderFactory: (providerFactory?: CurrentProviderFactory | undefined) => void;
    initPaymentDetectionApiKeys: (defaultProviderOptions?: Record<string, string | (() => string)> | undefined) => void;
    getDefaultProvider: (network?: string | undefined) => providers.Provider;
    getCeloProvider: () => providers.Provider;
    networkRpcs: Record<string, string>;
};
export default _default;
//# sourceMappingURL=providers.d.ts.map