import { LogTypes } from '@requestnetwork/types';
/**
 * Simple logger that outputs content to the console.
 */
export default class SimpleLogger implements LogTypes.ILogger {
    /**
     * maxLogLevel, the maximum log level to display
     */
    maxLogLevel: LogTypes.LogLevel;
    /**
     * The output console to use for logging
     */
    output: Console;
    /**
     * Creates an instance of SimpleLogger
     *
     * @param [maxLogLevel=DEFAULT_LOG_LEVEL] The maximum log level for this logger
     */
    constructor(maxLogLevel?: LogTypes.LogLevel);
    /**
     * Logs an error message
     *
     * @param message The error message to log
     * @param [tags] The array of tags concerning this message
     */
    error(message: string, tags?: string[]): void;
    /**
     * Logs a warning message
     *
     * @param message The warning message to log
     * @param [tags] The array of tags concerning this message
     */
    warn(message: string, tags?: string[]): void;
    /**
     * Logs an info message
     *
     * @param message The info message to log
     * @param [tags] The array of tags concerning this message
     */
    info(message: string, tags?: string[]): void;
    /**
     * Logs a debug message
     *
     * @param message The debug message to log
     * @param [tags] The array of tags concerning this message
     */
    debug(message: string, tags?: string[]): void;
    /**
     * Formats the message on the log format
     * The format is: ISO date|level|message|tag1,tag2,...,tagM
     *
     * @param level The log level of the message
     * @param message The log message
     * @param [tags] The log tags
     * @returns A string with the formatted log message
     */
    protected formatLog(level: LogTypes.LogLevel, message: string, tags?: string[]): string;
    /**
     * Throws if tags contain the log separator character
     *
     * @param tags The list of tags to check
     * @param separator The log separator character
     */
    protected checkForSeparator(tags: string[], separator: string): void;
}
//# sourceMappingURL=simple-logger.d.ts.map