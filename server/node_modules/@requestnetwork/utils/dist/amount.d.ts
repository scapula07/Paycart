import { RequestLogicTypes } from '@requestnetwork/types';
import { BigNumber } from 'ethers';
declare const _default: {
    add: typeof add;
    isValid: typeof isValid;
    reduce: typeof reduce;
};
/**
 * Function to manage amounts
 */
export default _default;
/**
 * Function to check if the amount is valid (representation of a positive integer)
 *
 * @param RequestLogicAmount amount the amount to check
 *
 * @returns boolean true if amount is a valid amount
 */
declare function isValid(amount: RequestLogicTypes.Amount | BigNumber): boolean;
/**
 * Function to add an amount by another
 *
 * @param RequestLogicAmount amount the base amount (positive integer)
 * @param RequestLogicAmount delta the amount to add (positive integer)
 *
 * @returns string the new amount in a string format
 */
declare function add(amount: RequestLogicTypes.Amount, delta: RequestLogicTypes.Amount): string;
/**
 * Function to reduce an amount by another
 *
 * Throw if the new amount is not valid (i.e: negative..)
 *
 * @param RequestLogicAmount amount the base amount (positive integer)
 * @param RequestLogicAmount delta the amount to reduce (positive integer)
 *
 * @returns string the new amount in a string format
 */
declare function reduce(amount: RequestLogicTypes.Amount, delta: RequestLogicTypes.Amount): string;
//# sourceMappingURL=amount.d.ts.map