import { PaymentTypes } from '@requestnetwork/types';
import { ICurrencyManager } from '@requestnetwork/currency';
import { TheGraphClient } from './client';
import { TheGraphInfoRetriever } from './info-retriever';
import type { PaymentEventResultFragment } from './generated/graphql';
import { ConversionTransferEventsParams } from '../types';
/**
 * TheGraph info retriever for conversion payments on EVMs, with no escrow support
 */
export declare class TheGraphConversionInfoRetriever extends TheGraphInfoRetriever<ConversionTransferEventsParams> {
    protected readonly client: TheGraphClient;
    protected readonly currencyManager: ICurrencyManager;
    constructor(client: TheGraphClient, currencyManager: ICurrencyManager);
    getTransferEvents(params: ConversionTransferEventsParams): Promise<PaymentTypes.AllNetworkEvents<PaymentTypes.IERC20FeePaymentEventParameters>>;
    protected filterPaymentEvents(payment: PaymentEventResultFragment, params: ConversionTransferEventsParams): boolean;
}
//# sourceMappingURL=conversion-info-retriever.d.ts.map