"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadCurrencyFromContract = void 0;
const tslib_1 = require("tslib");
const currency_1 = require("@requestnetwork/currency");
const types_1 = require("@requestnetwork/types");
const types_2 = require("@requestnetwork/smart-contracts/types");
const utils_1 = require("ethers/lib/utils");
const utils_2 = require("@requestnetwork/utils");
const loadCurrencyFromContract = (currency) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    try {
        const { network, value } = currency;
        if (!network || !(0, utils_1.isAddress)(value)) {
            return null;
        }
        currency_1.EvmChains.assertChainSupported(network);
        const contract = types_2.ERC20__factory.connect(value, (0, utils_2.getDefaultProvider)(network));
        const decimals = yield contract.decimals();
        if (!decimals) {
            return null;
        }
        const symbol = yield contract.symbol();
        if (!symbol) {
            return null;
        }
        const definition = {
            address: value,
            decimals,
            symbol,
            network: network,
            type: types_1.RequestLogicTypes.CURRENCY.ERC20,
        };
        return Object.assign(Object.assign({}, definition), { id: currency_1.CurrencyManager.currencyId(definition), hash: (0, currency_1.getCurrencyHash)(currency_1.CurrencyManager.toStorageCurrency(definition)), meta: null });
    }
    catch (e) {
        return null;
    }
});
exports.loadCurrencyFromContract = loadCurrencyFromContract;
//# sourceMappingURL=currency.js.map