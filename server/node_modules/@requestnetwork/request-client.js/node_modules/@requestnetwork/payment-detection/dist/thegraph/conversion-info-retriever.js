"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TheGraphConversionInfoRetriever = void 0;
const tslib_1 = require("tslib");
const ethers_1 = require("ethers");
const info_retriever_1 = require("./info-retriever");
/**
 * TheGraph info retriever for conversion payments on EVMs, with no escrow support
 */
class TheGraphConversionInfoRetriever extends info_retriever_1.TheGraphInfoRetriever {
    constructor(client, currencyManager) {
        super(client, currencyManager);
        this.client = client;
        this.currencyManager = currencyManager;
    }
    getTransferEvents(params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const { payments } = params.acceptedTokens
                ? yield this.client.GetAnyToFungiblePayments({
                    reference: ethers_1.utils.keccak256(`0x${params.paymentReference}`),
                    to: params.toAddress.toLowerCase(),
                    currency: params.requestCurrency.hash.toLowerCase(),
                    acceptedTokens: params.acceptedTokens.map((t) => t.toLowerCase()),
                    contractAddress: params.contractAddress.toLowerCase(),
                })
                : yield this.client.GetAnyToNativePayments({
                    reference: ethers_1.utils.keccak256(`0x${params.paymentReference}`),
                    to: params.toAddress.toLowerCase(),
                    currency: params.requestCurrency.hash.toLowerCase(),
                    contractAddress: params.contractAddress.toLowerCase(),
                });
            return {
                paymentEvents: payments
                    .filter((payment) => this.filterPaymentEvents(payment, params))
                    .map((payment) => this.mapPaymentEvents(payment, params)),
                escrowEvents: [],
            };
        });
    }
    filterPaymentEvents(payment, params) {
        // FIXME: move maxRateTimespan filter to TheGraph when they support the OR operator
        return !(payment.maxRateTimespan !== undefined &&
            payment.maxRateTimespan !== null &&
            params.maxRateTimespan !== undefined &&
            payment.maxRateTimespan < params.maxRateTimespan);
    }
}
exports.TheGraphConversionInfoRetriever = TheGraphConversionInfoRetriever;
//# sourceMappingURL=conversion-info-retriever.js.map