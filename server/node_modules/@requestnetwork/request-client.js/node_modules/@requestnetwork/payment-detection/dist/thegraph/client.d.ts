import { CurrencyTypes } from '@requestnetwork/types';
/**
 * A GraphQL client to query Request's subgraph.
 *
 * @type TGraphClientVariant: null if no variant, 'near' if native token payments detection on Near
 */
export type TheGraphClient<TChain extends CurrencyTypes.VMChainName = CurrencyTypes.EvmChainName> = TChain extends CurrencyTypes.NearChainName ? ReturnType<typeof getTheGraphNearClient> : ReturnType<typeof getTheGraphClient>;
export type TheGraphClientOptions = {
    timeout?: number;
};
export declare const getTheGraphClient: (url: string, options?: TheGraphClientOptions) => {
    GetLastSyncedBlock(variables?: import("./generated/graphql").Exact<{
        [key: string]: never;
    }> | undefined, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetLastSyncedBlockQuery>;
    GetPaymentsAndEscrowState(variables: import("./generated/graphql").Exact<{
        reference: any;
        to: any;
        tokenAddress?: any;
        contractAddress: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetPaymentsAndEscrowStateQuery>;
    GetAnyToFungiblePayments(variables: import("./generated/graphql").Exact<{
        reference: any;
        to: any;
        currency: any;
        acceptedTokens?: any;
        contractAddress: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetAnyToFungiblePaymentsQuery>;
    GetAnyToNativePayments(variables: import("./generated/graphql").Exact<{
        reference: any;
        to: any;
        currency: any;
        contractAddress: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetAnyToNativePaymentsQuery>;
    GetPaymentsAndEscrowStateForReceivables(variables: import("./generated/graphql").Exact<{
        reference: any;
        tokenAddress: any;
        contractAddress: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetPaymentsAndEscrowStateForReceivablesQuery>;
    GetSyncedBlock(variables: import("./generated/graphql").Exact<{
        blockHash: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetSyncedBlockQuery>;
};
export declare const getTheGraphNearClient: (url: string, options?: TheGraphClientOptions) => {
    GetAnyToNativePayments(variables: import("./generated/graphql-near").Exact<{
        reference: string;
        to: string;
        currency: string;
        maxRateTimespan: number;
        contractAddress: string;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql-near").GetAnyToNativePaymentsQuery>;
    GetFungibleTokenPayments(variables: import("./generated/graphql-near").Exact<{
        reference: string;
        to: string;
        contractAddress: string;
        tokenAddress: string;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql-near").GetFungibleTokenPaymentsQuery>;
    GetNearPayments(variables: import("./generated/graphql-near").Exact<{
        reference: string;
        to: string;
        contractAddress: string;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql-near").GetNearPaymentsQuery>;
};
export declare const defaultGetTheGraphClient: (network: CurrencyTypes.ChainName) => {
    GetLastSyncedBlock(variables?: import("./generated/graphql").Exact<{
        [key: string]: never;
    }> | undefined, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetLastSyncedBlockQuery>;
    GetPaymentsAndEscrowState(variables: import("./generated/graphql").Exact<{
        reference: any;
        to: any;
        tokenAddress?: any;
        contractAddress: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetPaymentsAndEscrowStateQuery>;
    GetAnyToFungiblePayments(variables: import("./generated/graphql").Exact<{
        reference: any;
        to: any;
        currency: any;
        acceptedTokens?: any;
        contractAddress: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetAnyToFungiblePaymentsQuery>;
    GetAnyToNativePayments(variables: import("./generated/graphql").Exact<{
        reference: any;
        to: any;
        currency: any;
        contractAddress: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetAnyToNativePaymentsQuery>;
    GetPaymentsAndEscrowStateForReceivables(variables: import("./generated/graphql").Exact<{
        reference: any;
        tokenAddress: any;
        contractAddress: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetPaymentsAndEscrowStateForReceivablesQuery>;
    GetSyncedBlock(variables: import("./generated/graphql").Exact<{
        blockHash: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetSyncedBlockQuery>;
} | {
    GetAnyToNativePayments(variables: import("./generated/graphql-near").Exact<{
        reference: string;
        to: string;
        currency: string;
        maxRateTimespan: number;
        contractAddress: string;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql-near").GetAnyToNativePaymentsQuery>;
    GetFungibleTokenPayments(variables: import("./generated/graphql-near").Exact<{
        reference: string;
        to: string;
        contractAddress: string;
        tokenAddress: string;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql-near").GetFungibleTokenPaymentsQuery>;
    GetNearPayments(variables: import("./generated/graphql-near").Exact<{
        reference: string;
        to: string;
        contractAddress: string;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql-near").GetNearPaymentsQuery>;
} | undefined;
//# sourceMappingURL=client.d.ts.map