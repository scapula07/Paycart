"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deploySuperFluid = void 0;
const tslib_1 = require("tslib");
const deployFramework = require("@superfluid-finance/ethereum-contracts/scripts/deploy-framework");
const deployTestToken = require("@superfluid-finance/ethereum-contracts/scripts/deploy-test-token");
const deploySuperToken = require("@superfluid-finance/ethereum-contracts/scripts/deploy-super-token");
require("@nomiclabs/hardhat-web3");
const errorHandler = (err) => {
    if (err)
        throw err;
};
// Deploys, set up the contracts
function deploySuperFluid(hre) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        let deployer;
        try {
            // get account from hardhat
            [deployer] = yield hre.ethers.getSigners();
            // deploy the framework
            yield deployFramework(errorHandler, {
                web3: hre.web3,
                from: deployer.address,
            });
            // deploy a fake erc20 token
            yield deployTestToken(errorHandler, [':', 'fDAI'], {
                web3: hre.web3,
                from: deployer.address,
            });
            // deploy a fake erc20 wrapper super token around the fDAI token
            yield deploySuperToken(errorHandler, [':', 'fDAI'], {
                web3: hre.web3,
                from: deployer.address,
            });
        }
        catch (e) {
            console.error(e);
        }
    });
}
exports.deploySuperFluid = deploySuperFluid;
//# sourceMappingURL=test-deploy-superfluid.js.map