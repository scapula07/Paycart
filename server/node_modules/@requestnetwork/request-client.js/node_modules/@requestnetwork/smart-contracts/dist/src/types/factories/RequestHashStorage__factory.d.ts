import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RequestHashStorage, RequestHashStorageInterface } from "../RequestHashStorage";
export declare class RequestHashStorage__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<RequestHashStorage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): RequestHashStorage;
    connect(signer: Signer): RequestHashStorage__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b6200033a565b600033905090565b6200005b816000620000a160201b620003741790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b620000b382826200015460201b60201c565b15620000f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ed9062000280565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001c8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001bf9062000318565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600082825260208201905092915050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b600062000268601f836200021f565b9150620002758262000230565b602082019050919050565b600060208201905081810360008301526200029b8162000259565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000620003006022836200021f565b91506200030d82620002a2565b604082019050919050565b600060208201905081810360008301526200033381620002f1565b9050919050565b610ce0806200034a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637362d9c81161005b5780637362d9c8146100ff578063bb5f747b1461011b578063d6cd94731461014b578063fe8cc9621461015557610088565b806310154bad1461008d578063291d9549146100a95780633af32abf146100c55780634c5a628c146100f5575b600080fd5b6100a760048036038101906100a29190610763565b610171565b005b6100c360048036038101906100be9190610763565b6101cc565b005b6100df60048036038101906100da9190610763565b610227565b6040516100ec91906107ab565b60405180910390f35b6100fd610244565b005b61011960048036038101906101149190610763565b610256565b005b61013560048036038101906101309190610763565b6102b1565b60405161014291906107ab565b60405180910390f35b6101536102ce565b005b61016f600480360381019061016a9190610881565b6102e0565b005b61018161017c61041c565b6102b1565b6101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610985565b60405180910390fd5b6101c981610424565b50565b6101dc6101d761041c565b6102b1565b61021b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021290610985565b60405180910390fd5b6102248161047e565b50565b600061023d8260016104d890919063ffffffff16565b9050919050565b61025461024f61041c565b6105a0565b565b61026661026161041c565b6102b1565b6102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c90610985565b60405180910390fd5b6102ae816105fa565b50565b60006102c78260006104d890919063ffffffff16565b9050919050565b6102de6102d961041c565b61047e565b565b6102f06102eb61041c565b610227565b61032f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032690610a17565b60405180910390fd5b7f18d417de4779c6e73fd772de6d0f29ed8ff746805f1c997ef63a124ffb3f38e08484338585604051610366959493929190610ad1565b60405180910390a150505050565b61037e82826104d8565b156103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b590610b66565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600033905090565b61043881600161037490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b61049281600161065490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054090610bf8565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6105b481600061065490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b61060e81600061037490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b61065e82826104d8565b61069d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069490610c8a565b60405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061073082610705565b9050919050565b61074081610725565b811461074b57600080fd5b50565b60008135905061075d81610737565b92915050565b600060208284031215610779576107786106fb565b5b60006107878482850161074e565b91505092915050565b60008115159050919050565b6107a581610790565b82525050565b60006020820190506107c0600083018461079c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107eb576107ea6107c6565b5b8235905067ffffffffffffffff811115610808576108076107cb565b5b602083019150836001820283011115610824576108236107d0565b5b9250929050565b60008083601f840112610841576108406107c6565b5b8235905067ffffffffffffffff81111561085e5761085d6107cb565b5b60208301915083600182028301111561087a576108796107d0565b5b9250929050565b6000806000806040858703121561089b5761089a6106fb565b5b600085013567ffffffffffffffff8111156108b9576108b8610700565b5b6108c5878288016107d5565b9450945050602085013567ffffffffffffffff8111156108e8576108e7610700565b5b6108f48782880161082b565b925092505092959194509250565b600082825260208201905092915050565b7f57686974656c69737441646d696e526f6c653a2063616c6c657220646f65732060008201527f6e6f742068617665207468652057686974656c69737441646d696e20726f6c65602082015250565b600061096f604083610902565b915061097a82610913565b604082019050919050565b6000602082019050818103600083015261099e81610962565b9050919050565b7f57686974656c6973746564526f6c653a2063616c6c657220646f6573206e6f7460008201527f2068617665207468652057686974656c697374656420726f6c65000000000000602082015250565b6000610a01603a83610902565b9150610a0c826109a5565b604082019050919050565b60006020820190508181036000830152610a30816109f4565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610a638385610902565b9350610a70838584610a37565b610a7983610a46565b840190509392505050565b610a8d81610725565b82525050565b600082825260208201905092915050565b6000610ab08385610a93565b9350610abd838584610a37565b610ac683610a46565b840190509392505050565b60006060820190508181036000830152610aec818789610a57565b9050610afb6020830186610a84565b8181036040830152610b0e818486610aa4565b90509695505050505050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b6000610b50601f83610902565b9150610b5b82610b1a565b602082019050919050565b60006020820190508181036000830152610b7f81610b43565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610be2602283610902565b9150610bed82610b86565b604082019050919050565b60006020820190508181036000830152610c1181610bd5565b9050919050565b7f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000610c74602183610902565b9150610c7f82610c18565b604082019050919050565b60006020820190508181036000830152610ca381610c67565b905091905056fea2646970667358221220c81af1882a54186f53c6e3386b6ca8acaf977bbd6fde58fe669877aaa752eab964736f6c63430008090033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): RequestHashStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RequestHashStorage;
}
//# sourceMappingURL=RequestHashStorage__factory.d.ts.map