"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IEthConversionProxy__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "currency",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes",
                name: "paymentReference",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "maxRateTimespan",
                type: "uint256",
            },
        ],
        name: "TransferWithConversionAndReference",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "bytes",
                name: "paymentReference",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "feeAddress",
                type: "address",
            },
        ],
        name: "TransferWithReferenceAndFee",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_requestAmount",
                type: "uint256",
            },
            {
                internalType: "address[]",
                name: "_path",
                type: "address[]",
            },
            {
                internalType: "bytes",
                name: "_paymentReference",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_feeAmount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_feeAddress",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_maxRateTimespan",
                type: "uint256",
            },
        ],
        name: "transferWithReferenceAndFee",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
class IEthConversionProxy__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IEthConversionProxy__factory = IEthConversionProxy__factory;
IEthConversionProxy__factory.abi = _abi;
//# sourceMappingURL=IEthConversionProxy__factory.js.map