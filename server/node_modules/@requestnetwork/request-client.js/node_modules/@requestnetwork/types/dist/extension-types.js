"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ACTION = exports.TYPE = exports.ID = exports.PAYMENT_NETWORK_ID = exports.OTHER_ID = exports.PnAnyToAnyConversion = exports.PnAnyToEth = exports.PnAnyToErc20 = exports.PnReferenceBased = exports.PnFeeReferenceBased = exports.PnStreamReferenceBased = exports.PnAddressBased = exports.PnAnyDeclarative = exports.ContentData = void 0;
const ContentData = require("./extensions/content-data-types");
exports.ContentData = ContentData;
const PnAddressBased = require("./extensions/pn-any-address-based-types");
exports.PnAddressBased = PnAddressBased;
const PnAnyDeclarative = require("./extensions/pn-any-declarative-types");
exports.PnAnyDeclarative = PnAnyDeclarative;
const PnStreamReferenceBased = require("./extensions/pn-any-stream-reference-based-types");
exports.PnStreamReferenceBased = PnStreamReferenceBased;
const PnFeeReferenceBased = require("./extensions/pn-any-fee-reference-based-types");
exports.PnFeeReferenceBased = PnFeeReferenceBased;
const PnReferenceBased = require("./extensions/pn-any-reference-based-types");
exports.PnReferenceBased = PnReferenceBased;
const PnAnyToErc20 = require("./extensions/pn-any-to-erc20-types");
exports.PnAnyToErc20 = PnAnyToErc20;
const PnAnyToEth = require("./extensions/pn-any-to-eth-types");
exports.PnAnyToEth = PnAnyToEth;
const PnAnyToAnyConversion = require("./extensions/pn-any-to-any-conversion-types");
exports.PnAnyToAnyConversion = PnAnyToAnyConversion;
/**
 * Identification of extensions handled by this implementation.
 * */
var OTHER_ID;
(function (OTHER_ID) {
    OTHER_ID["CONTENT_DATA"] = "content-data";
})(OTHER_ID = exports.OTHER_ID || (exports.OTHER_ID = {}));
var PAYMENT_NETWORK_ID;
(function (PAYMENT_NETWORK_ID) {
    PAYMENT_NETWORK_ID["BITCOIN_ADDRESS_BASED"] = "pn-bitcoin-address-based";
    PAYMENT_NETWORK_ID["TESTNET_BITCOIN_ADDRESS_BASED"] = "pn-testnet-bitcoin-address-based";
    PAYMENT_NETWORK_ID["ERC20_ADDRESS_BASED"] = "pn-erc20-address-based";
    PAYMENT_NETWORK_ID["ERC20_PROXY_CONTRACT"] = "pn-erc20-proxy-contract";
    PAYMENT_NETWORK_ID["ERC20_FEE_PROXY_CONTRACT"] = "pn-erc20-fee-proxy-contract";
    PAYMENT_NETWORK_ID["ERC777_STREAM"] = "pn-erc777-stream";
    PAYMENT_NETWORK_ID["ETH_FEE_PROXY_CONTRACT"] = "pn-eth-fee-proxy-contract";
    PAYMENT_NETWORK_ID["ETH_INPUT_DATA"] = "pn-eth-input-data";
    PAYMENT_NETWORK_ID["NATIVE_TOKEN"] = "pn-native-token";
    PAYMENT_NETWORK_ID["ANY_TO_NATIVE_TOKEN"] = "pn-any-to-native-token";
    PAYMENT_NETWORK_ID["ANY_DECLARATIVE"] = "pn-any-declarative";
    PAYMENT_NETWORK_ID["ANY_TO_ERC20_PROXY"] = "pn-any-to-erc20-proxy";
    PAYMENT_NETWORK_ID["ANY_TO_ETH_PROXY"] = "pn-any-to-eth-proxy";
    PAYMENT_NETWORK_ID["ERC20_TRANSFERABLE_RECEIVABLE"] = "pn-erc20-transferable-receivable";
})(PAYMENT_NETWORK_ID = exports.PAYMENT_NETWORK_ID || (exports.PAYMENT_NETWORK_ID = {}));
exports.ID = Object.assign(Object.assign({}, OTHER_ID), PAYMENT_NETWORK_ID);
/** Type of extensions */
var TYPE;
(function (TYPE) {
    TYPE["CONTENT_DATA"] = "content-data";
    TYPE["PAYMENT_NETWORK"] = "payment-network";
})(TYPE = exports.TYPE || (exports.TYPE = {}));
/** Actions possible */
var ACTION;
(function (ACTION) {
    ACTION["CREATE"] = "create";
})(ACTION = exports.ACTION || (exports.ACTION = {}));
//# sourceMappingURL=extension-types.js.map