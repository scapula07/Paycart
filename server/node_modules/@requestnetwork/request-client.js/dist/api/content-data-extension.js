"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_format_1 = require("@requestnetwork/data-format");
const types_1 = require("@requestnetwork/types");
// Extension ID for this class: content data
const CONTENT_DATA_ID = types_1.ExtensionTypes.ID.CONTENT_DATA;
/**
 * Handles the content data of a request
 */
class ContentDataExtension {
    /**
     * @param advancedLogic Instance of the advanced logic layer
     */
    constructor(advancedLogic) {
        this.extension = advancedLogic.extensions.contentData;
    }
    /**
     * Creates the extensions data for the creation of this extension
     *
     * @param content Content to link to the request
     * @returns ExtensionsData ready to be added to the request
     */
    createExtensionsDataForCreation(content) {
        if (data_format_1.default.isKnownFormat(content)) {
            const { valid, errors } = data_format_1.default.validate(content);
            if (!valid) {
                const errorsToShow = errors.map((e) => JSON.stringify(e)).join('\n');
                throw new Error(`The content data seem to follow a request format but contains errors: ${errorsToShow}`);
            }
        }
        return this.extension.createCreationAction({ content });
    }
    /**
     * Gets the content from the extensions state
     *
     * @param request The request of which we want the content
     * @returns The content
     */
    getContent(request) {
        if (request && request.extensions && request.extensions[CONTENT_DATA_ID]) {
            return request.extensions[CONTENT_DATA_ID].values.content;
        }
        return null;
    }
}
exports.default = ContentDataExtension;
//# sourceMappingURL=content-data-extension.js.map