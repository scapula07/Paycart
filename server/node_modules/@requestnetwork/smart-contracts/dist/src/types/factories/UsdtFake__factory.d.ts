import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UsdtFake, UsdtFakeInterface } from "../UsdtFake";
export declare class UsdtFake__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<UsdtFake>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): UsdtFake;
    connect(signer: Signer): UsdtFake__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060b98061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063313ce56714602d575b600080fd5b60336047565b604051603e9190606a565b60405180910390f35b60006006905090565b600060ff82169050919050565b6064816050565b82525050565b6000602082019050607d6000830184605d565b9291505056fea2646970667358221220bb75f369594f11bf488eef42893c2fa86b36cf6318ea3f91a79cff67f0203f2c64736f6c63430008090033";
    static readonly abi: {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): UsdtFakeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): UsdtFake;
}
//# sourceMappingURL=UsdtFake__factory.d.ts.map