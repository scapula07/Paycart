"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const addressBurnerContract = '0xfCb4393e7fAef06fAb01c00d67c1895545AfF3b8';
// Deploys, set up the contracts
function deploy(_args, hre) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        try {
            const [deployer, recipient] = yield hre.ethers.getSigners();
            // Not used, only useful to keep the same addresses as with Truffle
            const uselessInstance = yield (yield hre.ethers.getContractFactory('TestERC20')).deploy('100');
            yield uselessInstance.transfer(recipient.address, 10);
            // Deploy the contract RequestHashStorage
            const RequestHashStorage__factory = yield hre.ethers.getContractFactory('RequestHashStorage', deployer);
            const RequestHashStorage = yield RequestHashStorage__factory.deploy();
            console.log('RequestHashStorage Contract deployed: ' + RequestHashStorage.address);
            // Deploy the contract RequestOpenHashSubmitter
            const RequestOpenHashSubmitter__factory = yield hre.ethers.getContractFactory('RequestOpenHashSubmitter', deployer);
            const RequestOpenHashSubmitter = yield RequestOpenHashSubmitter__factory.deploy(RequestHashStorage.address, addressBurnerContract);
            console.log('RequestOpenHashSubmitter Contract deployed: ' + RequestOpenHashSubmitter.address);
            // Whitelist the requestSubmitter in requestHashDeclaration
            yield RequestHashStorage.addWhitelisted(RequestOpenHashSubmitter.address);
            console.log('requestSubmitter Whitelisted in requestHashDeclaration');
            // ----------------------------------
            console.log('Contracts deployed');
            console.log(`
      RequestHashStorage:       ${RequestHashStorage.address}
      RequestOpenHashSubmitter: ${RequestOpenHashSubmitter.address}
      `);
        }
        catch (e) {
            console.error(e);
        }
    });
}
exports.default = deploy;
//# sourceMappingURL=test-deploy-request-storage.js.map