"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deploySwapConversion = void 0;
const tslib_1 = require("tslib");
const lib_1 = require("../src/lib");
const deploy_one_1 = require("./deploy-one");
const utils_1 = require("./utils");
const contractName = 'ERC20SwapToConversion';
function deploySwapConversion(args, hre) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        const [deployer] = yield hre.ethers.getSigners();
        if (!args.conversionProxyAddress) {
            // FIXME: should try to retrieve information from artifacts instead
            console.error(`Missing conversion proxy on ${hre.network.name}, cannot deploy ${contractName}.`);
        }
        if (!utils_1.uniswapV2RouterAddresses[hre.network.name] && !args.swapProxyAddress) {
            console.error(`Missing swap router, cannot deploy ${contractName}.`);
        }
        const deployment = yield (0, deploy_one_1.deployOne)(args, hre, contractName, {
            constructorArguments: [deployer.address],
            artifact: lib_1.erc20SwapConversionArtifact,
            nonceCondition: args.nonceCondition,
        });
        return deployment;
    });
}
exports.deploySwapConversion = deploySwapConversion;
//# sourceMappingURL=erc20-swap-to-conversion.js.map