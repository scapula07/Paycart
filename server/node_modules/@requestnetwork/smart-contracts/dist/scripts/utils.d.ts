import { HardhatRuntimeEnvironment } from 'hardhat/types';
/**
 * List of contract addresses with the same interface as Uniswap V2 Router.
 * Used for SwapToPay and SwapToConvert.
 */
export declare const uniswapV2RouterAddresses: Record<string, string>;
/**
 * Executes as many empty transactions as needed for the nonce goes up to a certain target.
 * Assuming that the deployer is the first signer.
 */
export declare const jumpToNonce: (args: any, hre: HardhatRuntimeEnvironment, nonce: number) => Promise<void>;
/** Variable used to count the number of contracts deployed at the wrong address */
export declare let NUMBER_ERRORS: number;
/**
 * The function compare the address of the contract deployed with the existing one, usually stored in artifacts
 * @param contratName name of the contract used to deployed an instance, or name of the instance if they are many implementations
 * @param contractAddress address of the current deployement
 * @param contractAddressExpected usually stored in artifacts
 */
export declare const deployAddressChecking: (contratName: string, contractAddress: string, contractAddressExpected: string) => void;
//# sourceMappingURL=utils.d.ts.map