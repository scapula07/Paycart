"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupContract = void 0;
const tslib_1 = require("tslib");
const setupETHConversionProxy_1 = require("./setupETHConversionProxy");
const setupBatchPayments_1 = require("./setupBatchPayments");
const setupERC20SwapToConversion_1 = require("./setupERC20SwapToConversion");
/**
 * Updates the values of either BatchPayments, ETHConversionProxy, or ERC20SwapToConversion contract, if needed
 * @param contractAddress address of the proxy
 * @param hre Hardhat runtime environment
 * @param contractName name of the contract
 */
const setupContract = (contractAddress, hre, contractName) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {
    switch (contractName) {
        case 'ETHConversionProxy': {
            yield (0, setupETHConversionProxy_1.setupETHConversionProxy)(contractAddress, hre);
            break;
        }
        case 'ERC20SwapToConversion': {
            yield (0, setupERC20SwapToConversion_1.setupERC20SwapToConversion)(contractAddress, hre);
            break;
        }
        case 'BatchPayments': {
            yield (0, setupBatchPayments_1.setupBatchPayments)(contractAddress, hre);
            break;
        }
        default: {
            console.log('Contract name not found');
            break;
        }
    }
});
exports.setupContract = setupContract;
//# sourceMappingURL=setups.js.map