"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkCreate2Deployer = void 0;
const tslib_1 = require("tslib");
const utils_1 = require("@requestnetwork/utils");
const checkCreate2Deployer = (hre) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {
    if (!hre.config.xdeploy.networks || hre.config.xdeploy.networks.length === 0) {
        throw new Error('Invalid network configuration');
    }
    if (!hre.config.xdeploy.deployerAddress) {
        throw new Error('Deployer contract address missing');
    }
    yield Promise.all(hre.config.xdeploy.networks.map((network) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {
        let provider;
        if (network === 'celo') {
            provider = utils_1.default.getCeloProvider();
        }
        else {
            provider = utils_1.default.getDefaultProvider(network);
        }
        const code = yield provider.getCode(hre.config.xdeploy.deployerAddress);
        if (code === '0x') {
            throw new Error(`There is no deployer contract for network ${network} at address ${hre.config.xdeploy.deployerAddress}`);
        }
    })));
});
exports.checkCreate2Deployer = checkCreate2Deployer;
//# sourceMappingURL=check-deployer.js.map