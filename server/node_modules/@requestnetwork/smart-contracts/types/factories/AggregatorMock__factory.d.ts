import { Signer, BigNumberish, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AggregatorMock, AggregatorMockInterface } from "../AggregatorMock";
export declare class AggregatorMock__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_r: BigNumberish, _d: BigNumberish, _ra: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<AggregatorMock>;
    getDeployTransaction(_r: BigNumberish, _d: BigNumberish, _ra: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): AggregatorMock;
    connect(signer: Signer): AggregatorMock__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50604051610369380380610369833981810160405281019061003291906100ea565b82600181905550816000806101000a81548160ff021916908360ff16021790555080600260006101000a81548160ff021916908360ff16021790555050505061013d565b600080fd5b6000819050919050565b61008e8161007b565b811461009957600080fd5b50565b6000815190506100ab81610085565b92915050565b600060ff82169050919050565b6100c7816100b1565b81146100d257600080fd5b50565b6000815190506100e4816100be565b92915050565b60008060006060848603121561010357610102610076565b5b60006101118682870161009c565b9350506020610122868287016100d5565b9250506040610133868287016100d5565b9150509250925092565b61021d8061014c6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063313ce5671461004657806350d25bcd146100645780638205bf6a14610082575b600080fd5b61004e6100a0565b60405161005b9190610101565b60405180910390f35b61006c6100b6565b6040516100799190610135565b60405180910390f35b61008a6100c0565b6040516100979190610169565b60405180910390f35b60008060009054906101000a900460ff16905090565b6000600154905090565b6000600260009054906101000a900460ff1660ff16426100e091906101b3565b905090565b600060ff82169050919050565b6100fb816100e5565b82525050565b600060208201905061011660008301846100f2565b92915050565b6000819050919050565b61012f8161011c565b82525050565b600060208201905061014a6000830184610126565b92915050565b6000819050919050565b61016381610150565b82525050565b600060208201905061017e600083018461015a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101be82610150565b91506101c983610150565b9250828210156101dc576101db610184565b5b82820390509291505056fea2646970667358221220598945154f468d9a4dd0f7ef9dc7f192042bdb30f4febb9f0add17078693f63264736f6c63430008090033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): AggregatorMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): AggregatorMock;
}
//# sourceMappingURL=AggregatorMock__factory.d.ts.map