"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.payNearInputDataRequest = void 0;
const tslib_1 = require("tslib");
const types_1 = require("@requestnetwork/types");
const utils_1 = require("./utils");
const utils_near_1 = require("./utils-near");
/**
 * processes the transaction to pay a Near request.
 * @param request the request to pay
 * @param walletConnection the Web3 provider, or signer. Defaults to window.ethereum.
 * @param amount optionally, the amount to pay. Defaults to remaining amount of the request.
 */
function payNearInputDataRequest(request, walletConnection, amount, callback) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        if (!request.currencyInfo.network || !(0, utils_near_1.isNearNetwork)(request.currencyInfo.network)) {
            throw new Error('request.currencyInfo should be a Near network');
        }
        (0, utils_1.validateRequest)(request, types_1.ExtensionTypes.PAYMENT_NETWORK_ID.NATIVE_TOKEN);
        const { paymentReference, paymentAddress } = (0, utils_1.getRequestPaymentValues)(request);
        const amountToPay = (0, utils_1.getAmountToPay)(request, amount).toString();
        const version = (0, utils_1.getPaymentExtensionVersion)(request);
        if (!paymentReference) {
            throw new Error('Cannot pay without a paymentReference');
        }
        return (0, utils_near_1.processNearPayment)(walletConnection, request.currencyInfo.network, amountToPay, paymentAddress, paymentReference, version, callback);
    });
}
exports.payNearInputDataRequest = payNearInputDataRequest;
//# sourceMappingURL=near-input-data.js.map