import { BigNumberish } from 'ethers';
import { Near, WalletConnection } from 'near-api-js';
/**
 * Callback arguments for the Near web wallet.
 * @member callbackUrl called upon transaction approval
 * @member callbackMeta (according to Near docs: `meta` will be attached to the `callbackUrl` as a url search param)
 */
export interface INearTransactionCallback {
    callbackUrl?: string;
    meta?: string;
}
export declare const isValidNearAddress: (nearNetwork: Near, address: string) => Promise<boolean>;
export declare const isNearNetwork: (network?: string | undefined) => boolean;
export declare const isNearAccountSolvent: (amount: BigNumberish, nearWalletConnection: WalletConnection) => Promise<boolean>;
export declare const processNearPayment: (walletConnection: WalletConnection, network: string, amount: BigNumberish, to: string, paymentReference: string, version?: string, callback?: INearTransactionCallback | undefined) => Promise<void>;
/**
 * Processes a payment in Near native token, with conversion.
 *
 * @param amount is defined with 2 decimals, denominated in `currency`
 * @param currency is a currency ticker (e.g. "ETH" or "USD")
 * @param maxRateTimespan accepts any kind rate's age if '0'
 */
export declare const processNearPaymentWithConversion: (walletConnection: WalletConnection, network: string, amount: BigNumberish, to: string, paymentReference: string, currency: string, feeAddress: string, feeAmount: BigNumberish, maxToSpend: BigNumberish, maxRateTimespan?: string, version?: string, callback?: INearTransactionCallback | undefined) => Promise<void>;
//# sourceMappingURL=utils-near.d.ts.map