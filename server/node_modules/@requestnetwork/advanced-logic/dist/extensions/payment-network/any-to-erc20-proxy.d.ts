import { ICurrencyManager } from '@requestnetwork/currency';
import { ExtensionTypes, RequestLogicTypes } from '@requestnetwork/types';
import Erc20FeeProxyPaymentNetwork from './erc20/fee-proxy-contract';
export default class AnyToErc20ProxyPaymentNetwork extends Erc20FeeProxyPaymentNetwork {
    private currencyManager;
    constructor(currencyManager: ICurrencyManager, extensionId?: ExtensionTypes.PAYMENT_NETWORK_ID, currentVersion?: string);
    /**
     * Creates the extensionsData to create the extension ERC20 fee proxy contract payment detection
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */
    createCreationAction(creationParameters: ExtensionTypes.PnAnyToErc20.ICreationParameters): ExtensionTypes.IAction;
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp action timestamp
     *
     * @returns state of the extension created
     */
    protected applyCreation(extensionAction: ExtensionTypes.IAction, timestamp: number): ExtensionTypes.IState;
    /**
     * Validate the extension action regarding the currency and network
     * It must throw in case of error
     */
    protected validate(request: RequestLogicTypes.IRequest, extensionAction: ExtensionTypes.IAction): void;
}
//# sourceMappingURL=any-to-erc20-proxy.d.ts.map