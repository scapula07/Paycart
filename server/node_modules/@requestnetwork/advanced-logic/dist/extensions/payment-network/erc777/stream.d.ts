import { ExtensionTypes } from '@requestnetwork/types';
import ReferenceBasedPaymentNetwork from '../reference-based';
/**
 * Implementation of the payment network to pay in ERC777, including third-party fees payment, based on a reference provided to a proxy contract.
 */
export default class Erc777StreamPaymentNetwork<TCreationParameters extends ExtensionTypes.PnStreamReferenceBased.ICreationParameters = ExtensionTypes.PnStreamReferenceBased.ICreationParameters> extends ReferenceBasedPaymentNetwork<TCreationParameters> {
    constructor();
    /**
     * Creates the extensionsData to create the payment detection extension
     *
     * @param creationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be stored in the request
     */
    createCreationAction(creationParameters: TCreationParameters): ExtensionTypes.IAction<TCreationParameters>;
    /**
     * Applies a creation extension action
     *
     * @param extensionAction action to apply
     * @param timestamp ?
     *
     * @returns state of the extension created
     */
    protected applyCreation(extensionAction: ExtensionTypes.IAction, timestamp: number): ExtensionTypes.IState;
    /**
     * Verifies the consistency between the different parameters of the create action for subsequent requests
     *
     * @param parameters extension parameters to check
     *
     * @returns a boolean
     */
    protected isSubsequentRequestParametersValid(parameters: ExtensionTypes.PnStreamReferenceBased.ISubsequentRequestCreationParameters): boolean;
}
//# sourceMappingURL=stream.d.ts.map