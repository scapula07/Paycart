"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mainnet_address_based_1 = require("./mainnet-address-based");
const types_1 = require("@requestnetwork/types");
const BITCOIN_NETWORK = 'testnet';
/**
 * Implementation of the payment network to pay in BTC based on the addresses ON THE BITCOIN TESTNET
 * This payment network MUST BE USED ONLY for TEST PURPOSE. it MUST NEVER BE USED for real request.
 * With this extension one request can have two dedicated bitcoin addresses (one for payment and one for refund)
 * Every bitcoin transaction that reaches these addresses will be interpreted as payment or refund.
 * Important: the addresses must be exclusive to the request
 */
class BitcoinTestnetAddressBasedPaymentNetwork extends mainnet_address_based_1.default {
    constructor() {
        super(types_1.ExtensionTypes.PAYMENT_NETWORK_ID.TESTNET_BITCOIN_ADDRESS_BASED);
    }
    isValidAddress(address) {
        return this.isValidAddressForSymbolAndNetwork(address, 'BTC-testnet', BITCOIN_NETWORK);
    }
}
exports.default = BitcoinTestnetAddressBasedPaymentNetwork;
//# sourceMappingURL=testnet-address-based.js.map