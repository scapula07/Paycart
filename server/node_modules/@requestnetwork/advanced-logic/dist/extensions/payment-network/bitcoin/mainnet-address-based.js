"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@requestnetwork/types");
const address_based_1 = require("../address-based");
const CURRENT_VERSION = '0.1.0';
const BITCOIN_NETWORK = 'mainnet';
/**
 * Implementation of the payment network to pay in BTC based on the addresses
 * With this extension one request can have two dedicated bitcoin addresses (one for payment and one for refund)
 * Every bitcoin transaction that reaches these addresses will be interpreted as payment or refund.
 * Important: the addresses must be exclusive to the request
 */
class BitcoinAddressBasedPaymentNetwork extends address_based_1.default {
    constructor(extensionId = types_1.ExtensionTypes.PAYMENT_NETWORK_ID
        .BITCOIN_ADDRESS_BASED) {
        super(extensionId, CURRENT_VERSION, types_1.RequestLogicTypes.CURRENCY.BTC);
    }
    isValidAddress(address) {
        return this.isValidAddressForSymbolAndNetwork(address, 'BTC', BITCOIN_NETWORK);
    }
}
exports.default = BitcoinAddressBasedPaymentNetwork;
//# sourceMappingURL=mainnet-address-based.js.map