import { ExtensionTypes, RequestLogicTypes } from '@requestnetwork/types';
import { FeeReferenceBasedPaymentNetwork } from '../fee-reference-based';
/**
 * Implementation of the payment network to pay in ERC20, including third-party fees payment, based on a reference provided to a proxy contract.
 */
export default class Erc20FeeProxyPaymentNetwork<TCreationParameters extends ExtensionTypes.PnFeeReferenceBased.ICreationParameters = ExtensionTypes.PnFeeReferenceBased.ICreationParameters> extends FeeReferenceBasedPaymentNetwork<TCreationParameters> {
    protected network?: string | undefined;
    /**
     * @param network is only relevant for non-EVM chains (Near and Near testnet)
     */
    constructor(extensionId?: ExtensionTypes.PAYMENT_NETWORK_ID, currentVersion?: string | undefined, network?: string | undefined);
    protected static getDefaultCurrencyVersion(network?: string): string;
    protected validate(request: RequestLogicTypes.IRequest, extensionAction: ExtensionTypes.IAction): void;
    protected isValidAddress(address: string): boolean;
}
//# sourceMappingURL=fee-proxy-contract.d.ts.map