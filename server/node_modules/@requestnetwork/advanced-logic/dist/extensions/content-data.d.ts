import { ExtensionTypes } from '@requestnetwork/types';
import { AbstractExtension } from './abstract-extension';
/**
 * Implementation of the content data extension
 */
export default class ContentDataExtension<TCreationParameters extends ExtensionTypes.ContentData.ICreationParameters = ExtensionTypes.ContentData.ICreationParameters> extends AbstractExtension<TCreationParameters> {
    constructor();
    /**
     * Creates the extensionsData to create the extension content-data
     * Should be called to create the extensionsData of a request
     *
     * @param extensions IAdvancedLogicExtensionsCreationParameters extensions parameters to create
     *
     * @returns IExtensionCreationAction the extensionsData to be store in the request
     */
    createCreationAction(creationParameters: TCreationParameters): ExtensionTypes.IAction<TCreationParameters>;
    /**
     * Applies a creation
     *
     * @param extensionAction action to apply
     *
     * @returns state of the extension created
     */
    protected applyCreation(extensionAction: ExtensionTypes.IAction, timestamp: number): ExtensionTypes.IState;
}
//# sourceMappingURL=content-data.d.ts.map