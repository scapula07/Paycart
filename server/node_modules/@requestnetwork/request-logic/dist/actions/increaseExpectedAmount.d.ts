import { IdentityTypes, RequestLogicTypes, SignatureProviderTypes } from '@requestnetwork/types';
/**
 * Implementation of the action increaseExpectedAmount from request logic specification
 */
declare const _default: {
    applyActionToRequest: typeof applyActionToRequest;
    format: typeof format;
};
export default _default;
/**
 * Function to format an action to increase expected amount of a Request
 *
 * @param IIncreaseExpectedAmountParameters increaseAmountParameters parameters to increase expected amount of a request
 * @param IIdentity signerIdentity Identity of the signer
 * @param ISignatureProvider signatureProvider Signature provider in charge of the signature
 *
 * @returns IAction  the action with the signature
 */
declare function format(increaseAmountParameters: RequestLogicTypes.IIncreaseExpectedAmountParameters, signerIdentity: IdentityTypes.IIdentity, signatureProvider: SignatureProviderTypes.ISignatureProvider): Promise<RequestLogicTypes.IAction>;
/**
 * Function to apply an increaseExpectedAmount action on a request
 *
 * @param Types.IAction action the action to apply
 *
 * @returns Types.IRequest the new request
 */
declare function applyActionToRequest(action: RequestLogicTypes.IAction, timestamp: number, request: RequestLogicTypes.IRequest): RequestLogicTypes.IRequest;
//# sourceMappingURL=increaseExpectedAmount.d.ts.map