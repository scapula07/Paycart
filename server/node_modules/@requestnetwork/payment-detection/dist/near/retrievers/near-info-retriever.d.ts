import { PaymentTypes } from '@requestnetwork/types';
import { TheGraphClient } from '../../thegraph';
interface NearSubGraphPaymentEvent extends PaymentTypes.IETHPaymentEventParameters {
    receiptId: string;
}
/**
 * Gets a list of transfer events for a set of Near payment details
 */
export declare class NearInfoRetriever {
    protected paymentReference: string;
    protected toAddress: string;
    protected proxyContractName: string;
    protected eventName: PaymentTypes.EVENTS_NAMES;
    protected client: TheGraphClient<'near'>;
    /**
     * @param paymentReference The reference to identify the payment
     * @param toAddress Address to check
     * @param eventName Indicate if it is an address for payment or refund
     * @param network The id of network we want to check
     *
     */
    constructor(paymentReference: string, toAddress: string, proxyContractName: string, eventName: PaymentTypes.EVENTS_NAMES, network: string);
    getTransferEvents(): Promise<PaymentTypes.IPaymentNetworkEvent<NearSubGraphPaymentEvent>[]>;
}
export {};
//# sourceMappingURL=near-info-retriever.d.ts.map