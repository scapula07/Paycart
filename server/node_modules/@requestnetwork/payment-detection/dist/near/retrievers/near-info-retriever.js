"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NearInfoRetriever = void 0;
const tslib_1 = require("tslib");
const thegraph_1 = require("../../thegraph");
/**
 * Gets a list of transfer events for a set of Near payment details
 */
class NearInfoRetriever {
    /**
     * @param paymentReference The reference to identify the payment
     * @param toAddress Address to check
     * @param eventName Indicate if it is an address for payment or refund
     * @param network The id of network we want to check
     *
     */
    constructor(paymentReference, toAddress, proxyContractName, eventName, network) {
        this.paymentReference = paymentReference;
        this.toAddress = toAddress;
        this.proxyContractName = proxyContractName;
        this.eventName = eventName;
        if (network !== 'aurora' && network !== 'aurora-testnet' && network !== 'near-testnet') {
            throw new Error('Near input data info-retriever only works with Near mainnet and testnet');
        }
        network = network.replace('aurora', 'near');
        this.client = (0, thegraph_1.getTheGraphNearClient)(`https://api.thegraph.com/subgraphs/name/requestnetwork/request-payments-${network}`);
    }
    getTransferEvents() {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
            const payments = yield this.client.GetNearPayments({
                reference: this.paymentReference,
                to: this.toAddress,
                contractAddress: this.proxyContractName,
            });
            return payments.payments.map((p) => ({
                amount: p.amount,
                name: this.eventName,
                parameters: {
                    block: p.block,
                    confirmations: p.block,
                    // Cf. FIXME#1 above
                    // txHash: transaction.txHash,
                    receiptId: p.receiptId,
                },
                timestamp: Number(p.timestamp),
            }));
        });
    }
}
exports.NearInfoRetriever = NearInfoRetriever;
//# sourceMappingURL=near-info-retriever.js.map