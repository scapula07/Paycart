/**
 * A GraphQL client to query Request's subgraph.
 *
 * @type TGraphClientVariant: null if no variant, 'near' if native token payments detection on Near
 */
export declare type TheGraphClient<TGraphClientVariant extends 'near' | null = null> = TGraphClientVariant extends 'near' ? ReturnType<typeof getTheGraphNearClient> : ReturnType<typeof getTheGraphClient>;
export declare type TheGraphClientOptions = {
    timeout?: number;
};
export declare const getTheGraphClient: (url: string, options?: TheGraphClientOptions | undefined) => {
    GetLastSyncedBlock(variables?: import("./generated/graphql").Exact<{
        [key: string]: never;
    }> | undefined, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetLastSyncedBlockQuery>;
    GetPaymentsAndEscrowState(variables: import("./generated/graphql").Exact<{
        reference: any;
        to: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetPaymentsAndEscrowStateQuery>;
    GetSyncedBlock(variables: import("./generated/graphql").Exact<{
        blockHash: any;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql").GetSyncedBlockQuery>;
};
export declare const getTheGraphNearClient: (url: string, options?: TheGraphClientOptions | undefined) => {
    GetNearConversionPayments(variables: import("./generated/graphql-near").Exact<{
        reference: string;
        to: string;
        currency: string;
        maxRateTimespan: number;
        contractAddress: string;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql-near").GetNearConversionPaymentsQuery>;
    GetNearPayments(variables: import("./generated/graphql-near").Exact<{
        reference: string;
        to: string;
        contractAddress: string;
    }>, requestHeaders?: (Record<string, string> | import("graphql-request/dist/types.dom").Headers | string[][]) | undefined): Promise<import("./generated/graphql-near").GetNearPaymentsQuery>;
};
//# sourceMappingURL=client.d.ts.map