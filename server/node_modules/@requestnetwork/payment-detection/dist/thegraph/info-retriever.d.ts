import { PaymentTypes } from '@requestnetwork/types';
import { ICurrencyManager } from '@requestnetwork/currency';
import type { TheGraphClient } from '.';
declare type TransferEventsParams = {
    /** The reference to identify the payment*/
    paymentReference: string;
    /** The recipient of the transfer */
    toAddress: string;
    /** The address of the payment proxy */
    contractAddress: string;
    /** The chain to check for payment */
    paymentChain: string;
    /** Indicates if it is an address for payment or refund */
    eventName: PaymentTypes.EVENTS_NAMES;
    /** The list of ERC20 tokens addresses accepted for payments and refunds */
    acceptedTokens?: string[];
    /** The the maximum span between the time the rate was fetched and the payment */
    maxRateTimespan?: number;
};
export declare class TheGraphInfoRetriever {
    private readonly client;
    private readonly currencyManager;
    constructor(client: TheGraphClient, currencyManager: ICurrencyManager);
    getTransferEvents(params: TransferEventsParams): Promise<PaymentTypes.AllNetworkEvents<PaymentTypes.IERC20FeePaymentEventParameters>>;
    private filterPaymentEvents;
    private mapPaymentEvents;
    private mapEscrowEvents;
}
export {};
//# sourceMappingURL=info-retriever.d.ts.map