import { PaymentTypes } from '@requestnetwork/types';
import { ethers } from 'ethers';
import { IEventRetriever } from '../types';
/**
 * Retrieves a list of payment events from a escrow contract.
 *
 */
export declare class EscrowERC20InfoRetriever implements IEventRetriever<PaymentTypes.IPaymentNetworkBaseEvent<PaymentTypes.ESCROW_EVENTS_NAMES>, PaymentTypes.ESCROW_EVENTS_NAMES> {
    private paymentReference;
    private escrowContractAddress;
    private escrowCreationBlockNumber;
    private tokenContractAddress;
    private toAddress;
    private network;
    private eventName?;
    contractEscrow: ethers.Contract;
    provider: ethers.providers.Provider;
    /**
     * @param paymentReference The reference to identify the payment.
     * @param escrowContractAddress The address of the escrow contract.
     * @param escrowCreationBlockNumber The block that created the escrow contract.
     * @param tokenContractAddress The address of the ERC20 contract
     * @param toAddress Address of the balance we want to check
     * @param eventName Indicate if it is an address for payment or escrow
     * @param network The Ethereum network to use.
     */
    constructor(paymentReference: string, escrowContractAddress: string, escrowCreationBlockNumber: number, tokenContractAddress: string, toAddress: string, network: string, eventName?: PaymentTypes.ESCROW_EVENTS_NAMES | undefined);
    /**
     * Retrieves events for the current contract, address and network.
     */
    getAllContractEvents(): Promise<PaymentTypes.IPaymentNetworkEscrowEvent<PaymentTypes.GenericEventParameters, PaymentTypes.ESCROW_EVENTS_NAMES>[]>;
    getContractEvents(): Promise<PaymentTypes.IPaymentNetworkEscrowEvent<PaymentTypes.GenericEventParameters, PaymentTypes.ESCROW_EVENTS_NAMES>[]>;
    /**
     * Retrieves events for the current contract, address and network.
     */
    getContractEventsForEventName(eventName: PaymentTypes.ESCROW_EVENTS_NAMES): Promise<PaymentTypes.IPaymentNetworkEscrowEvent<PaymentTypes.GenericEventParameters, PaymentTypes.ESCROW_EVENTS_NAMES>[]>;
    /**
     * Retrieves current escrow data from requestMapping in the Escrow smart contract
     */
    getEscrowRequestMapping(): Promise<PaymentTypes.EscrowChainData>;
    static getEscrowDeploymentInformation: import("../utils").GetDeploymentInformation<false>;
}
//# sourceMappingURL=escrow-info-retriever.d.ts.map