import { PaymentTypes } from '@requestnetwork/types';
/**
 * The default Bitcoin detection provider give access to the bitcoin blockchain through several external API's
 */
export declare class DefaultBitcoinDetectionProvider implements PaymentTypes.IBitcoinDetectionProvider {
    providers: PaymentTypes.IBitcoinDetectionProvider[];
    /**
     * Creates an instance of DefaultBitcoinDetectionProvider
     */
    constructor();
    /**
     * Gets BTC address balance with events
     *
     * @param bitcoinNetworkId The Bitcoin network ID: 0 (mainnet) or 3 (testnet)
     * @param address BTC address to check
     * @param eventName Indicates if it is an address for payment or refund
     * @returns Object containing address info
     */
    getAddressBalanceWithEvents(bitcoinNetworkId: number, address: string, eventName: PaymentTypes.EVENTS_NAMES): Promise<PaymentTypes.BTCBalanceWithEvents>;
    /**
     * Get the balance and events the most common in an array
     *
     * @param array array to count
     * @returns Object containing IBalanceWithEvents and the count
     */
    private getMostCommonBalance;
}
//# sourceMappingURL=default-bitcoin-detection-provider.d.ts.map