"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@requestnetwork/types");
const hexadecimal_serializable_multi_format_1 = require("../hexadecimal-serializable-multi-format");
/**
 * Class to serialize and deserialize multi-format AES-256-CBC encrypted data
 */
class EthereumAddressMultiFormat extends hexadecimal_serializable_multi_format_1.default {
    constructor() {
        super(types_1.MultiFormatTypes.prefix.NORMALIZE_KECCAK256_HASH, types_1.MultiFormatTypes.HashTypes.TYPE.KECCAK256);
    }
    /**
     * Checks if an object is a deserialized multi-format
     *
     * @param data object to check
     * @returns true if the data is a deserialized multi-format
     */
    isSerializableObject(data) {
        return (super.isSerializableObject(data) &&
            data.value.length === types_1.MultiFormatTypes.FORMAT_NORMALIZE_KECCAK256_HASH_LENGTH);
    }
    /**
     * Checks if a string is a serialized multi-format
     *
     * @param formatted string to check
     * @returns true if the data is a serialized multi-format
     */
    isDeserializableString(formatted) {
        return (super.isDeserializableString(formatted) &&
            formatted.length === types_1.MultiFormatTypes.FORMAT_NORMALIZE_KECCAK256_HASH_LENGTH);
    }
}
exports.default = EthereumAddressMultiFormat;
//# sourceMappingURL=keccak256-format.js.map