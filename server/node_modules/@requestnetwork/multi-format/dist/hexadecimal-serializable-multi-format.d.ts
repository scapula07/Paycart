import { MultiFormatTypes } from '@requestnetwork/types';
import SerializableMultiFormat from './serializable-multi-format';
/**
 * Class to serialize and deserialize multi-format data using hexadecimal values
 * This class is meant to be inherited by all the multi-format using as value a hexadecimal (starting by '0x')
 */
export default class HexadecimalSerializableMultiFormat extends SerializableMultiFormat {
    /**
     * Checks if an object is a deserialized multi-format
     *
     * @param data object to check
     * @returns true if the data is a deserialized multi-format
     */
    isSerializableObject(data: MultiFormatTypes.IMultiFormatDeserialized): boolean;
    /**
     * Checks if a string is a serialized multi-format
     *
     * @param formatted string to check
     * @returns true if the data is a serialized multi-format
     */
    isDeserializableString(formatted: string): boolean;
    /**
     * Serializes a deserialized multi-format
     *
     * @param data object to serialize
     * @returns the data as a serialized multi-format
     */
    serialize(data: MultiFormatTypes.IMultiFormatDeserialized): string;
    /**
     * Deserialized a multi-format string
     *
     * @param data string to deserialized
     * @returns the data as a deserialized multi-format
     */
    deserialize(formatted: string): MultiFormatTypes.IMultiFormatDeserialized;
}
//# sourceMappingURL=hexadecimal-serializable-multi-format.d.ts.map