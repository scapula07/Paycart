import { MultiFormatTypes } from '@requestnetwork/types';
import GroupMultiFormat from './group-multi-format';
/** Serializes and deserializes any multi-format supported */
declare const _default: {
    deserialize: typeof deserialize;
    encryptionFormats: GroupMultiFormat;
    hashFormat: GroupMultiFormat;
    identityFormat: GroupMultiFormat;
    plainFormat: GroupMultiFormat;
    serialize: typeof serialize;
};
export default _default;
/**
 * Deserializes any supported serialized string
 *
 * @param formatted the string to deserialize
 * @returns the deserialized object or throw
 */
declare function deserialize(formatted: string): MultiFormatTypes.IMultiFormatDeserialized;
/**
 * Serializes any supported serializable object
 *
 * @param data the object to serialize
 * @returns the serialized string or throw.
 */
declare function serialize(data: MultiFormatTypes.IMultiFormatDeserialized): string;
//# sourceMappingURL=index.d.ts.map