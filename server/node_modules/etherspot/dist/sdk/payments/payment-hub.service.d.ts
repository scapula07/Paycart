import { BigNumber } from 'ethers';
import { Service } from '../common';
import { PaymentHub, PaymentHubBridge, PaymentHubBridges, PaymentHubDeposit, PaymentHubDeposits, PaymentHubPayment, PaymentHubPayments, PaymentHubs } from './classes';
export declare class PaymentHubService extends Service {
    getPaymentHub(hub: string, token?: string): Promise<PaymentHub>;
    getPaymentHubs(hub?: string, token?: string, page?: number): Promise<PaymentHubs>;
    getPaymentHubBridge(hub: string, token: string, acceptedChainId: number, acceptedToken: string): Promise<PaymentHubBridge>;
    getPaymentHubBridges(hub: string, token?: string, acceptedChainId?: number, page?: number): Promise<PaymentHubBridges>;
    getPaymentHubDeposit(hub: string, token: string, owner: string): Promise<PaymentHubDeposit>;
    getPaymentHubDeposits(hub: string, tokens: string[], owner: string, page?: number): Promise<PaymentHubDeposits>;
    getPaymentHubPayment(hash: string): Promise<PaymentHubPayment>;
    getPaymentHubPayments(hub: string, token: string, senderOrRecipient: string, page?: number): Promise<PaymentHubPayments>;
    createPaymentHubPayment(hub: string, token: string, recipient: string, value: BigNumber): Promise<PaymentHubPayment>;
    updatePaymentHub(liquidity: BigNumber, token?: string): Promise<PaymentHub>;
    updatePaymentHubDeposit(hub: string, totalAmount: BigNumber, token?: string): Promise<PaymentHubDeposit>;
    transferPaymentHubDeposit(hub: string, token: string, value: BigNumber, targetChainId: number, targetHub?: string, targetToken?: any): Promise<PaymentHubDeposit>;
    activatePaymentHubBridge(token: string, acceptedChainId: number, acceptedToken?: string): Promise<PaymentHubBridge>;
    deactivatePaymentHubBridge(token: string, acceptedChainId: number, acceptedToken?: string): Promise<PaymentHubBridge>;
}
