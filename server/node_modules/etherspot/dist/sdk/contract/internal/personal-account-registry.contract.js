"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PersonalAccountRegistryContract = void 0;
const contracts_1 = require("@etherspot/contracts");
const ethers_1 = require("ethers");
const internal_contract_1 = require("./internal.contract");
class PersonalAccountRegistryContract extends internal_contract_1.InternalContract {
    constructor() {
        super(contracts_1.ContractNames.PersonalAccountRegistry);
    }
    encodeIsAccountDeployed(account) {
        const data = this.interface.encodeFunctionData('isAccountDeployed', [account]);
        return {
            to: this.address,
            data
        };
    }
    ;
    computeAccountAddress(saltOwner) {
        let result = null;
        const { networkService } = this.services;
        const personalAccountImplementation = networkService.getInternalContractAddress(contracts_1.ContractNames.PersonalAccountImplementationV1);
        if (saltOwner && this.address && personalAccountImplementation) {
            result = this.computeCreate2Address(contracts_1.ContractNames.Account, ethers_1.utils.solidityKeccak256(['address'], [saltOwner]), this.address, personalAccountImplementation);
        }
        return result;
    }
}
exports.PersonalAccountRegistryContract = PersonalAccountRegistryContract;
