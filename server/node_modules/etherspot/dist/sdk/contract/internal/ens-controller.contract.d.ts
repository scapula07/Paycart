import { BigNumberish, BytesLike } from 'ethers';
import { TransactionRequest } from '../../common';
import { InternalContract } from './internal.contract';
export declare class ENSControllerContract extends InternalContract {
    constructor();
    encodeRegisterSubNode?(node: string, label: string, guardianSignature: string): TransactionRequest;
    'encodeSetAddr(bytes32,address)'?: (node: string, address: string) => TransactionRequest;
    'encodeSetAddr(bytes32,uint256,bytes)'?: (node: string, coinType: BigNumberish, address: string) => TransactionRequest;
    encodeSetName?(node: string, name: string): TransactionRequest;
    encodeSetPubkey?(node: string, x: BytesLike, y: BytesLike): TransactionRequest;
    encodeSetText?(node: string, key: string, value: string): TransactionRequest;
    encodeSetAddr(node: string, address: string): TransactionRequest;
    encodeSetAddr(node: string, coinType: BigNumberish, address: string): TransactionRequest;
}
