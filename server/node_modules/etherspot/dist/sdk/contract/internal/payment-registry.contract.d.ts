/// <reference types="node" />
import { BigNumberish } from 'ethers';
import { TransactionRequest } from '../../common';
import { InternalContract } from './internal.contract';
export declare class PaymentRegistryContract extends InternalContract {
    constructor();
    encodeWithdrawDeposit?(token: string, amount: BigNumberish, guardianSignature: string): TransactionRequest;
    encodeCommitPaymentChannelAndWithdraw?(sender: string, token: string, uid: string, blockNumber: number, amount: BigNumberish, senderSignature: string, guardianSignature: string): TransactionRequest;
    encodeCommitPaymentChannelAndDeposit?(sender: string, token: string, uid: string, blockNumber: number, amount: BigNumberish, senderSignature: string, guardianSignature: string): TransactionRequest;
    computePaymentDepositAccountAddress(saltOwner: string): string;
    hashDepositWithdrawal(owner: string, token: string, amount: BigNumberish): Buffer;
    hashPaymentChannelCommit(sender: string, recipient: string, token: string, uid: string, blockNumber: number, amount: BigNumberish): Buffer;
}
