import { NotificationTypes } from './constants';
import { GatewayTransaction } from '../gateway';
export interface BaseNotification<T = any, P = any> {
    type: T;
    recipient: string;
    payload: P;
}
export declare type AccountNotification = BaseNotification<NotificationTypes.AccountUpdated, {
    account: string;
}>;
export declare type AccountMemberNotification = BaseNotification<NotificationTypes.AccountMemberCreated | NotificationTypes.AccountMemberUpdated, {
    account: string;
    member: string;
}>;
export declare type ENSNodeNotification = BaseNotification<NotificationTypes.ENSNodeCreated | NotificationTypes.ENSNodeUpdated, {
    hash: string;
}>;
export declare type GatewayBatchNotification = BaseNotification<NotificationTypes.GatewayBatchCreated | NotificationTypes.GatewayBatchUpdated, {
    hash: string;
}>;
export declare type GatewayResubmittedNotification = BaseNotification<NotificationTypes.GatewayBatchResubmitted, {
    hash: string;
    oldTransaction: {
        id: number;
    };
    newTransaction: GatewayTransaction;
}>;
export declare type P2PPaymentChannelNotification = BaseNotification<NotificationTypes.P2PPaymentChannelCreated | NotificationTypes.P2PPaymentChannelUpdated, {
    hash: string;
}>;
export declare type P2PPaymentDepositNotification = BaseNotification<NotificationTypes.P2PPaymentDepositCreated | NotificationTypes.P2PPaymentDepositUpdated, {
    hash: string;
}>;
export declare type PaymentHubNotification = BaseNotification<NotificationTypes.PaymentHubCreated | NotificationTypes.PaymentHubUpdated, {
    hub: string;
    token: string;
}>;
export declare type PaymentHubBridgeNotification = BaseNotification<NotificationTypes.PaymentHubBridgeCreated | NotificationTypes.PaymentHubBridgeUpdated, {
    hub: string;
    token: string;
    acceptedChainId: number;
    acceptedToken: string;
}>;
export declare type PaymentHubDepositNotification = BaseNotification<NotificationTypes.PaymentHubDepositCreated | NotificationTypes.PaymentHubDepositUpdated, {
    hub: string;
    token: string;
    owner: string;
}>;
export declare type PaymentHubPaymentNotification = BaseNotification<NotificationTypes.PaymentHubPaymentCreated, {
    hash: string;
}>;
export declare type TransactionUpdatedNotification = BaseNotification<NotificationTypes.TransactionUpdated, {
    hash: string;
}>;
export declare type Notification = AccountNotification | AccountMemberNotification | ENSNodeNotification | GatewayBatchNotification | P2PPaymentChannelNotification | P2PPaymentDepositNotification | PaymentHubNotification | PaymentHubBridgeNotification | PaymentHubDepositNotification | PaymentHubPaymentNotification | TransactionUpdatedNotification;
