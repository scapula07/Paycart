/// <reference types="zen-observable" />
import { DocumentNode, Observable } from '@apollo/client/core';
import { Service } from '../common';
import { ApiOptions, ApiRequestOptions, ApiRequestQueryOptions } from './interfaces';
export declare class ApiService extends Service {
    private readonly options;
    private apolloClient;
    private cache;
    constructor(options: ApiOptions);
    query<T extends {}>(query: DocumentNode, options?: ApiRequestQueryOptions<T>): Promise<T>;
    mutate<T extends {}>(mutation: DocumentNode, options?: ApiRequestOptions<T>): Promise<T>;
    subscribe<T extends {}>(query: DocumentNode, options?: ApiRequestOptions<T>): Observable<T>;
    protected onInit(): void;
    private wrapCall;
    private prepareApiVariables;
}
