import { Service, ObjectSubject } from '../common';
import { Project, Projects } from './classes';
import { CurrentProject } from './interfaces';
export declare class ProjectService extends Service {
    readonly currentProject$: ObjectSubject<CurrentProject, "metadata" | "key">;
    constructor(currentProject?: CurrentProject);
    get headers(): {
        [key: string]: any;
    };
    get currentProject(): CurrentProject;
    isProjectValid(): Promise<boolean>;
    switchCurrentProject(currentProject: CurrentProject): CurrentProject;
    withCustomProjectMetadata<T = any>(customMetadata: string, inner: () => Promise<T>): Promise<T>;
    getProject(key: string): Promise<Project>;
    getProjects(page: number): Promise<Projects>;
    updateProject(key: string, privateKey: string, endpoint: string): Promise<Project>;
    callCurrentProject<T = any, P = any>(payload: P): Promise<T>;
}
