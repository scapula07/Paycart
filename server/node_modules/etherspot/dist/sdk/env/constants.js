"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SUPPORTED_ENVS = exports.EnvNames = void 0;
const network_1 = require("../network");
var EnvNames;
(function (EnvNames) {
    EnvNames["MainNets"] = "mainnets";
    EnvNames["TestNets"] = "testnets";
    EnvNames["LocalNets"] = "localnets";
    EnvNames["MainNetsTest"] = "mainnetstest";
})(EnvNames = exports.EnvNames || (exports.EnvNames = {}));
exports.SUPPORTED_ENVS = {
    [EnvNames.MainNets]: {
        apiOptions: {
            host: 'etherspot.pillarproject.io',
            useSsl: true,
        },
        networkOptions: {
            supportedNetworkNames: [
                network_1.NetworkNames.Mainnet,
                network_1.NetworkNames.Xdai,
                network_1.NetworkNames.Bsc,
                network_1.NetworkNames.Fantom,
                network_1.NetworkNames.Matic,
                network_1.NetworkNames.Aurora,
                network_1.NetworkNames.Avalanche,
                network_1.NetworkNames.Optimism,
                network_1.NetworkNames.Arbitrum,
                network_1.NetworkNames.Moonbeam,
                network_1.NetworkNames.Celo,
                network_1.NetworkNames.Fuse,
                network_1.NetworkNames.ArbitrumNova,
                network_1.NetworkNames.Klaytn,
                network_1.NetworkNames.OKTC,
            ],
        },
    },
    [EnvNames.TestNets]: {
        apiOptions: {
            host: 'qa-etherspot.pillarproject.io',
            useSsl: true,
        },
        networkOptions: {
            supportedNetworkNames: [
                network_1.NetworkNames.Goerli,
                network_1.NetworkNames.Chiado,
                network_1.NetworkNames.BscTest,
                network_1.NetworkNames.FantomTest,
                network_1.NetworkNames.Mumbai,
                network_1.NetworkNames.AuroraTest,
                network_1.NetworkNames.Fuji,
                network_1.NetworkNames.Moonbase,
                network_1.NetworkNames.CeloTest,
                network_1.NetworkNames.FuseSparknet,
                network_1.NetworkNames.ArbitrumNitro,
                network_1.NetworkNames.NeonDevnet,
                network_1.NetworkNames.OptimismGoerli,
                network_1.NetworkNames.BaseGoerli,
                network_1.NetworkNames.KlaytnBaobab,
                network_1.NetworkNames.OktcTest,
                network_1.NetworkNames.Etherspot,
            ],
        },
    },
    [EnvNames.LocalNets]: {
        apiOptions: {
            host: 'localhost',
            port: 4000,
        },
        networkOptions: {
            supportedNetworkNames: [
                network_1.NetworkNames.LocalA,
                network_1.NetworkNames.LocalB,
                network_1.NetworkNames.LocalH,
            ],
        },
    },
    [EnvNames.MainNetsTest]: {
        apiOptions: {
            host: 'qa-etherspot.pillarproject.io',
            useSsl: true,
        },
        networkOptions: {
            supportedNetworkNames: [
                network_1.NetworkNames.Matic,
                network_1.NetworkNames.Bsc,
                network_1.NetworkNames.Optimism,
                network_1.NetworkNames.Arbitrum,
                network_1.NetworkNames.Klaytn,
            ],
        },
    },
};
