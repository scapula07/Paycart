"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CHAIN_ID_TO_NETWORK_NAME = exports.NETWORK_NAME_TO_CHAIN_ID = exports.NetworkNames = void 0;
var NetworkNames;
(function (NetworkNames) {
    NetworkNames["Mainnet"] = "mainnet";
    NetworkNames["Goerli"] = "goerli";
    NetworkNames["Xdai"] = "xdai";
    NetworkNames["Chiado"] = "chiado";
    NetworkNames["Bsc"] = "bsc";
    NetworkNames["BscTest"] = "bscTest";
    NetworkNames["Fantom"] = "fantom";
    NetworkNames["FantomTest"] = "fantomTest";
    NetworkNames["Matic"] = "matic";
    NetworkNames["Mumbai"] = "mumbai";
    NetworkNames["Aurora"] = "aurora";
    NetworkNames["AuroraTest"] = "auroraTest";
    NetworkNames["Avalanche"] = "avalanche";
    NetworkNames["Fuji"] = "fuji";
    NetworkNames["Optimism"] = "optimism";
    NetworkNames["Arbitrum"] = "arbitrum";
    NetworkNames["Moonbeam"] = "moonbeam";
    NetworkNames["Moonbase"] = "moonbase";
    NetworkNames["Celo"] = "celo";
    NetworkNames["CeloTest"] = "celoTest";
    NetworkNames["Etherspot"] = "etherspot";
    NetworkNames["Fuse"] = "fuse";
    NetworkNames["FuseSparknet"] = "fuseSparknet";
    NetworkNames["ArbitrumNova"] = "arbitrumNova";
    NetworkNames["ArbitrumNitro"] = "arbitrumNitro";
    NetworkNames["NeonDevnet"] = "neonDevnet";
    NetworkNames["OptimismGoerli"] = "optimismGoerli";
    NetworkNames["BaseGoerli"] = "baseGoerli";
    NetworkNames["KlaytnBaobab"] = "klaytnBaobab";
    NetworkNames["Klaytn"] = "klaytn";
    NetworkNames["OKTC"] = "oktc";
    NetworkNames["OktcTest"] = "oktcTest";
    NetworkNames["LocalA"] = "localA";
    NetworkNames["LocalB"] = "localB";
    NetworkNames["LocalH"] = "localH";
})(NetworkNames = exports.NetworkNames || (exports.NetworkNames = {}));
exports.NETWORK_NAME_TO_CHAIN_ID = {
    [NetworkNames.Mainnet]: 1,
    [NetworkNames.Goerli]: 5,
    [NetworkNames.Xdai]: 100,
    [NetworkNames.Chiado]: 10200,
    [NetworkNames.Bsc]: 56,
    [NetworkNames.BscTest]: 97,
    [NetworkNames.Fantom]: 250,
    [NetworkNames.FantomTest]: 4002,
    [NetworkNames.Matic]: 137,
    [NetworkNames.Mumbai]: 80001,
    [NetworkNames.Aurora]: 1313161554,
    [NetworkNames.AuroraTest]: 1313161555,
    [NetworkNames.Avalanche]: 43114,
    [NetworkNames.Fuji]: 43113,
    [NetworkNames.Optimism]: 10,
    [NetworkNames.Arbitrum]: 42161,
    [NetworkNames.Moonbeam]: 1284,
    [NetworkNames.Moonbase]: 1287,
    [NetworkNames.CeloTest]: 44787,
    [NetworkNames.Celo]: 42220,
    [NetworkNames.Fuse]: 122,
    [NetworkNames.FuseSparknet]: 123,
    [NetworkNames.ArbitrumNova]: 42170,
    [NetworkNames.ArbitrumNitro]: 421613,
    [NetworkNames.NeonDevnet]: 245022926,
    [NetworkNames.OptimismGoerli]: 420,
    [NetworkNames.BaseGoerli]: 84531,
    [NetworkNames.Klaytn]: 8217,
    [NetworkNames.KlaytnBaobab]: 1001,
    [NetworkNames.Etherspot]: 4386,
    [NetworkNames.OKTC]: 66,
    [NetworkNames.OktcTest]: 65,
    [NetworkNames.LocalA]: 9999,
    [NetworkNames.LocalB]: 6666,
    [NetworkNames.LocalH]: 3333,
};
exports.CHAIN_ID_TO_NETWORK_NAME = Object.entries(exports.NETWORK_NAME_TO_CHAIN_ID).reduce((result, [networkName, chainId]) => (Object.assign(Object.assign({}, result), { [chainId]: networkName })), {});
