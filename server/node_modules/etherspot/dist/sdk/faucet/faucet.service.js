"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FaucetService = void 0;
const core_1 = require("@apollo/client/core");
const common_1 = require("../common");
const constants_1 = require("./constants");
class FaucetService extends common_1.Service {
    async topUpAccount() {
        const { apiService, networkService, accountService } = this.services;
        const { network: { name }, } = networkService;
        if (!constants_1.SUPPORTED_FAUCET_NETWORKS[name]) {
            throw new common_1.Exception('Faucet not supported on current network');
        }
        const account = accountService.accountAddress;
        const { result } = await apiService.mutate(core_1.gql `
        mutation($chainId: Int, $account: String!) {
          result: topUpAccount(chainId: $chainId, account: $account)
        }
      `, {
            variables: {
                account,
            },
        });
        return result;
    }
    async topUpPaymentDepositAccount() {
        const { apiService, networkService, accountService } = this.services;
        const { network: { name }, } = networkService;
        if (!constants_1.SUPPORTED_FAUCET_NETWORKS[name]) {
            throw new common_1.Exception('Faucet not supported on current network');
        }
        const account = accountService.accountAddress;
        const { result } = await apiService.mutate(core_1.gql `
        mutation($chainId: Int, $account: String!) {
          result: topUpPaymentDepositAccount(chainId: $chainId, account: $account)
        }
      `, {
            variables: {
                account,
            },
        });
        return result;
    }
}
exports.FaucetService = FaucetService;
