"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferPaymentHubDepositDto = void 0;
const class_validator_1 = require("class-validator");
const network_1 = require("../network");
const validators_1 = require("./validators");
let TransferPaymentHubDepositDto = (() => {
    class TransferPaymentHubDepositDto {
        constructor() {
            this.token = null;
            this.targetNetworkName = null;
            this.targetHub = null;
            this.targetToken = null;
        }
    }
    __decorate([
        validators_1.IsAddress(),
        __metadata("design:type", String)
    ], TransferPaymentHubDepositDto.prototype, "hub", void 0);
    __decorate([
        class_validator_1.IsOptional(),
        validators_1.IsAddress(),
        __metadata("design:type", String)
    ], TransferPaymentHubDepositDto.prototype, "token", void 0);
    __decorate([
        validators_1.IsBigNumberish({
            positive: true,
        }),
        __metadata("design:type", Object)
    ], TransferPaymentHubDepositDto.prototype, "value", void 0);
    __decorate([
        class_validator_1.IsOptional(),
        class_validator_1.IsEnum(network_1.NetworkNames),
        __metadata("design:type", String)
    ], TransferPaymentHubDepositDto.prototype, "targetNetworkName", void 0);
    __decorate([
        class_validator_1.IsOptional(),
        validators_1.IsAddress(),
        __metadata("design:type", String)
    ], TransferPaymentHubDepositDto.prototype, "targetHub", void 0);
    __decorate([
        class_validator_1.IsOptional(),
        validators_1.IsAddress(),
        __metadata("design:type", String)
    ], TransferPaymentHubDepositDto.prototype, "targetToken", void 0);
    return TransferPaymentHubDepositDto;
})();
exports.TransferPaymentHubDepositDto = TransferPaymentHubDepositDto;
