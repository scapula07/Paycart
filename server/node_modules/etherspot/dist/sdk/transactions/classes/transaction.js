"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transaction = void 0;
const ethers_1 = require("ethers");
const class_transformer_1 = require("class-transformer");
const common_1 = require("../../common");
const transaction_asset_1 = require("./transaction-asset");
const transaction_batch_1 = require("./transaction-batch");
let Transaction = (() => {
    class Transaction {
    }
    __decorate([
        common_1.TransformBigNumber(),
        __metadata("design:type", ethers_1.BigNumber)
    ], Transaction.prototype, "value", void 0);
    __decorate([
        common_1.TransformBigNumber(),
        __metadata("design:type", ethers_1.BigNumber)
    ], Transaction.prototype, "gasPrice", void 0);
    __decorate([
        class_transformer_1.Type(() => transaction_asset_1.TransactionAsset),
        __metadata("design:type", transaction_asset_1.TransactionAsset)
    ], Transaction.prototype, "asset", void 0);
    __decorate([
        class_transformer_1.Type(() => transaction_batch_1.TransactionBatch),
        __metadata("design:type", transaction_batch_1.TransactionBatch)
    ], Transaction.prototype, "batch", void 0);
    return Transaction;
})();
exports.Transaction = Transaction;
