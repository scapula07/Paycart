import { BigNumber } from 'ethers';
import { Service } from '../common';
import { KnownContract, KnownContracts, NftList, StreamList, StreamTransactionPayload, Transaction, Transactions } from './classes';
export declare class TransactionsService extends Service {
    getTransaction(hash: string): Promise<Transaction>;
    getTransactions(account: string): Promise<Transactions>;
    getNftList(account: string): Promise<NftList>;
    createStreamTransactionPayload(account: string, receiver: string, amount: BigNumber, tokenAddress: string, userData: string, skipBalanceCheck: boolean): Promise<StreamTransactionPayload>;
    modifyStreamTransactionPayload(account: string, receiver: string, amount: BigNumber, tokenAddress: string, userData?: string, skipBalanceCheck?: boolean): Promise<StreamTransactionPayload>;
    deleteStreamTransactionPayload(account: string, receiver: string, tokenAddress: string, userData: string): Promise<StreamTransactionPayload>;
    getStreamList(account: string): Promise<StreamList>;
    createSuperERC20WrapperTransactionPayload(underlyingToken: string, underlyingDecimals: number, name: string, symbol: string): Promise<StreamTransactionPayload>;
    findSuperERC20WrapperOnChain(underlyingToken: string, chainId: number, underlyingDecimals: number, name: string, symbol: string): Promise<string>;
    registerERC20WrapperToken(wrapperAddress: string, chainId?: number): Promise<KnownContract | null>;
    getRegisteredERC20WrapperTokens(): Promise<KnownContracts>;
}
