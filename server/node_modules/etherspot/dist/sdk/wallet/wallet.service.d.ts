import { Observable } from 'rxjs';
import { BytesLike, Wallet as EtherWallet } from 'ethers';
import { Service, ObjectSubject } from '../common';
import { WalletProvider, WalletProviderLike } from './providers';
import { Wallet, WalletOptions } from './interfaces';
export declare class WalletService extends Service {
    private providerLike;
    private options;
    readonly wallet$: ObjectSubject<Wallet, "address" | "providerType">;
    readonly walletAddress$: Observable<string>;
    private provider;
    constructor(providerLike: WalletProviderLike, options: WalletOptions);
    get wallet(): Wallet;
    get etherWallet(): Partial<EtherWallet>;
    get walletAddress(): string;
    get walletProvider(): WalletProvider;
    signMessage(message: BytesLike): Promise<string>;
    protected switchWalletProvider(providerLike: WalletProviderLike): void;
    protected onInit(): void;
}
